# Nom du pipeline
name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      DB_USER: ${{ secrets.DB_USER }}
      DB_PASS: ${{ secrets.DB_PASS }}
      DB_NAME: ${{ secrets.DB_NAME }}
      DB_HOST: ${{ secrets.DB_HOST }}

    strategy:
      matrix:
        python-version: [ "3.11" ]
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Run linting
        run: |
          pip install flake8
          flake8 bookquest/app --exclude=venv

      - name: Install system dependencies
        run: |
          sudo apt-get update && sudo apt-get install -y \
          pkg-config \
          libzbar0 \
          libgl1 \
          libglib2.0-0 \
          default-libmysqlclient-dev \
          gcc \
          && sudo rm -rf /var/lib/apt/lists/*

      - name: Install dependencies
        run: |
          pip install -r requirements.txt

      - name: Run unit tests
        run: |
          pytest bookquest\tests\unit\test_unit_app.py -v -s

      - name: Install Docker
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            apt-transport-https \
            ca-certificates \
            curl \
            gnupg-agent \
            software-properties-common
          curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
          sudo add-apt-repository \
             "deb [arch=amd64] https://download.docker.com/linux/ubuntu \
             $(lsb_release -cs) \
             stable"
          sudo apt-get update
          sudo apt-get install -y docker-ce docker-ce-cli containerd.io

      # Changer de répertoire pour accéder au Dockerfile
      - name: Change directory to Dockerfile location
        run: cd ../../

      # Construire l'image Docker
      - name: Build Docker image
        run: docker build -t bookquest-backend:latest -f Dockerfile .

  # Déploiement en staging
  deploy-staging:
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install Docker
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            apt-transport-https \
            ca-certificates \
            curl \
            gnupg-agent \
            software-properties-common
          curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
          sudo add-apt-repository \
             "deb [arch=amd64] https://download.docker.com/linux/ubuntu \
             $(lsb_release -cs) \
             stable"
          sudo apt-get update
          sudo apt-get install -y docker-ce docker-ce-cli containerd.io

      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Change directory to Dockerfile location
        run: cd ../../

      # Construire et pousser l'image Docker pour staging
      - name: Build and push Docker image
        run: |
          docker build -t bookquest-backend:staging -f Dockerfile .
          docker tag bookquest-backend:staging ${{ secrets.DOCKER_HUB_USERNAME }}/bookquest-backend:staging
          docker push ${{ secrets.DOCKER_HUB_USERNAME }}/bookquest-backend:staging

      - name: Deploy to Staging
        run: echo "Deploying to Staging environment..."

  # Déploiement en production
  deploy-production:
    runs-on: ubuntu-latest
    needs: deploy-staging
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install Docker
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            apt-transport-https \
            ca-certificates \
            curl \
            gnupg-agent \
            software-properties-common
          curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
          sudo add-apt-repository \
             "deb [arch=amd64] https://download.docker.com/linux/ubuntu \
             $(lsb_release -cs) \
             stable"
          sudo apt-get update
          sudo apt-get install -y docker-ce docker-ce-cli containerd.io

      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Change directory to Dockerfile location
        run: cd ../../

      # Construire et pousser l'image Docker pour production
      - name: Build and push Docker image
        run: |
          docker build -t bookquest-backend:production -f Dockerfile .
          docker tag bookquest-backend:production ${{ secrets.DOCKER_HUB_USERNAME }}/bookquest-backend:production
          docker push ${{ secrets.DOCKER_HUB_USERNAME }}/bookquest-backend:production

      - name: Deploy to Production
        run: echo "Deploying to Production environment..."
